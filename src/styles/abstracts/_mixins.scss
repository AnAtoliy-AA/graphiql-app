// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

// Font-styles

@mixin font-style($family: $main-font, $size: $font-size-base, $color: $c-gray, $weight: 400) {
  font-family: $family;
  font-size: $size;
  font-weight: $weight;
  color: $color;
}

@mixin block-style($bg: $dark-gradient, $b-radius: 15px) {
  background: $bg;
  border-radius: $b-radius;
  box-shadow: 0px 0px 10px 10px rgba(0, 0, 0, 0.2);
}

@mixin button-style($bg-color: $c-gray, $height: fit-content, $width: fit-content, $b-radius: 5px) {
  background-color: $bg-color;
  height: $height;
  width: $width;
  padding: 5px 10px;
  border: none;
  border-radius: $b-radius;
  cursor: pointer;
  transition: all 0.2s ease-in-out;

  &:hover {
    background-color: lighten($bg-color, 10%);
  }

  &:active {
    background-color: darken($bg-color, 10%);
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

@mixin btn-img-style(
  $image: '../assets//icons/start-btn_ico.png',
  $size: 70%,
  $position: center,
  $repeat: no-repeat
) {
  background-image: url($image);
  background-size: $size;
  background-position: $position;
  background-repeat: $repeat;
}

// flex $basis-divided container
@mixin flex-columns($basis: 33%) {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  > * {
    flex-basis: $basis;
  }
}

/// Make a context based selector a little more friendly
@mixin pseudo($display: block, $pos: absolute, $content: '') {
  content: $content;
  display: $display;
  position: $pos;
}
// Example
// div::after {
//   @include pseudo;
//   top: -1rem; left: -1rem;
//   width: 1rem; height: 1rem;
// }

/// CSS triangles
@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false) {
  @include pseudo($pos: $position);
  width: 0;
  height: 0;
  @if $round {
    border-radius: 3px;
  }
  @if $direction == down {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
    margin-top: 0 - round($size / 2.5);
  } @else if $direction == up {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
    margin-bottom: 0 - round($size / 2.5);
  } @else if $direction == right {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
    margin-right: -$size;
  } @else if $direction == left {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
    margin-left: -$size;
  }
}

/// Event wrapper
// @param {Bool} $self [false] - Whether or not to include current selector
// @mixin onHover($self: false) {
//   @if $self {
//     &,
//     &:hover,
//     &:active,
//     &:focus,
//     &:focus-within {
//       @content;
//     }
//   } @else {
//     &:hover,
//     &:active,
//     &:focus,
//     &:focus-within {
//       @content;
//     }
//   }
// }
